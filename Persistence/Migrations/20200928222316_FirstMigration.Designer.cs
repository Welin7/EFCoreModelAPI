// <auto-generated />
using EFCoreModelAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreModelAPI.Persistence.Migrations
{
    [DbContext(typeof(EFCoreAPIDbContext))]
    [Migration("20200928222316_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreModelAPI.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieStoreId")
                        .HasColumnType("int");

                    b.Property<string>("NameDirector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieStoreId")
                        .IsUnique();

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("EFCoreModelAPI.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameMovie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VideoStoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoStoreId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("EFCoreModelAPI.Entities.VideoStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("NameVideoStore")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NameVideoStore")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256)
                        .HasDefaultValue("Video Store Standard");

                    b.HasKey("Id");

                    b.ToTable("VideoStore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            NameVideoStore = "Steven Spielberg"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            NameVideoStore = "Stanley Kucrick"
                        });
                });

            modelBuilder.Entity("EFCoreModelAPI.Entities.Director", b =>
                {
                    b.HasOne("EFCoreModelAPI.Entities.VideoStore", null)
                        .WithOne("Director")
                        .HasForeignKey("EFCoreModelAPI.Entities.Director", "MovieStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreModelAPI.Entities.Movie", b =>
                {
                    b.HasOne("EFCoreModelAPI.Entities.VideoStore", "VideoStore")
                        .WithMany("Movies")
                        .HasForeignKey("VideoStoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
